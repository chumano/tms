@{
    ViewBag.Title = "Quyền";
    Layout = "~/Views/CMS/Shared/_Layout.cshtml";
}

<div  ng-controller="MasterController as master">
<!-- START : MAIN  --------------------------------------------->
<div class="container-fluid none-display" ng-class="{'active-content' : !master.IsShowDetail}">
    <div ng-if="!master.IsShowDetail">
        <!-- TOP BUTTONS -------------------->
        <div class="row" style="padding-top: 5px">
            <div class="col-sm-6" >
                <h4>{{master.ObjectTitle}}</h4>
            </div>
            <div class="col-md-6 pull-right text-right" >

                <button class="btn btn-success  "  ng-disabled="!master.FormConfig._CanCreate" ng-click="master.AddItem()">
                    <i class="fa fa-plus white"></i> Thêm
                </button>
            </div>
        </div>

        <!-- FORM -------------------->
        <div class="box box-primary box-body">
        <div class="row " style="padding-bottom: 10px; padding-top: 5px">
            <div class="col-sm-12">
            <form name="dataForm" novalidate ng-submit="master.Search()">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div  class="col-md-4  "><label class="">RoleName </label></div>
                            <div class="col-md-8">
                                <input class="form-control" ng-model="master.DataObject.RoleName"
                                    placeholder="Nhập RoleName" required
                                    check-empty="" check-empty-message="Vui lòng nhập [RoleName]."
                                    check-length="200" check-length-message="Chiều dài tối đa là {0}."
                                    check-under="RoleName" />
                            </div>
                        </div>
                        
                    </div>

                    <div class="col-md-6">
                        <div class="row ">
                            <div  class="col-md-4  "><label class="">IsSpecial </label></div>
                            <div class="col-md-8">
                                <select class="form-control" ng-model="master.DataObject.IsSpecial" yes-no-dropdown>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row" style="margin-top:10px">
                     <div class="col-md-6" >
                        <!--- Clear --->
                        <button class="btn btn-primary" ng-click="master.ClearForm()" type="button">
                            <i class="fa fa-undo white"></i> Clear
                        </button>

                        <!--- Search --->
                        <button type="submit" id="btn-search" class="btn  btn-primary search"  >
                            <i class="fa fa-search" ng-hide="master.isSearching"></i>
                            <i class="fa fa-spinner white loading" ng-show="master.isSearching"></i>
                            Tìm kiếm
                        </button>
                    </div>
                </div>
            </form>
        
            </div>
        </div>
        </div>

        <!-- TABLE -------------------->
        <div class="row">
            <div class="col-md-12">
                <table  class="table table-bordered table-striped table-hover table-condensed editable-table no-margin" 
                    ng-form="master.TableForm._tableForm" 
                    ng-table="master.TableForm.tableParams" >
                    <tr ng-repeat="row in $data" >
                        <td title="'#'" class="col-center">
                            <span>{{ ((master.TableForm.tableParams.page() - 1)  *master.TableForm.tableParams.count()) + ($index +1) }}</span>
                        </td>

                        <!--------- data columns -------------->
                        <td title="'RoleName'"  sortable="'RoleName'">
                            <span class="editable-text"><a href="#" ng-bind="row.RoleName" ng-click="master.Edit(row)"></a></span>
                        </td>
                        <td title="'IsSpecial'"  sortable="'IsSpecial'">
                            <input type="checkbox" name="IsSpecial" ng-model="row.IsSpecial"  ng-disabled="true"/>
                        </td>

                        <!---------command buttons -------------->  
                        <td width="100px" >
                            <!---edit--->
                            <button class="btn btn-default btn-sm" ng-click="master.Edit(row)" 
                                ng-if="master.FormConfig._CanUpdate"><span class="glyphicon glyphicon-pencil"></span></button>
                           
                            <!----del--->
                            <button class="btn btn-danger btn-sm" ng-click="master.DeleteObject(row)" 
                                ng-if="master.FormConfig._CanDelete"><span class="glyphicon glyphicon-trash"></span></button>
                        </td>
                    </tr>
                    <!--------------- table footer------------------>
                    <tfoot>
                        <tr>
                            <td colspan="7"><label>Số records : {{master.TableForm.tableParams.total()}} </label></td>
                        </tr>
                    </tfoot>
                </table>
                <div style="clear:both"></div>
            </div>
        </div>
    </div>
</div>
<!-- END   : MAIN  --------------------------------------------->

<!-- START : DETAIL --------------------------------------------->
<div class="container-fluid none-display" ng-class="{'active-content' : master.IsShowDetail}"
     ng-controller="DetailController as detail">
    <div ng-if="master.IsShowDetail"  >
        @* @Html.Partial("~/Views/CMS/Tool/DBTableConfigDetail.cshtml")*@
        <!-- TOP BUTTONS -------------------->
        <div class="row" style="padding-top: 5px">
            <div class="col-sm-6" ng-switch="!(detail.DataObject.Id > 0)" >
                <h4 ng-switch-default > Chỉnh sửa : {{master.ObjectTitle}}</h4>
                <h4 ng-switch-when="true"> Thêm mới : {{master.ObjectTitle}}</h4>
            </div>

            <div class="col-md-6 pull-right text-right">
                <button class="btn btn-primary" ng-if="(detail.DataObject.Id== -1 || detail.IsEditingDetail) && detail.DataObject._CanUpdate" ng-click="detail.SaveForm(false)">
                    <i class="fa fa-check white"></i>
                    <span>Lưu</span>
                </button>

                <button class="btn btn-primary" ng-if="detail.DataObject.Id > 0 && !detail.IsEditingDetail && detail.DataObject._CanUpdate" ng-click="detail.EditDetail()">
                    <i class="fa fa-edit white"></i>
                    <span>Sửa</span>
                </button>
               
                <button class="btn btn-default" ng-click="master.CloseDetail()">
                    <i class="fa fa-arrow-left"></i>
                    <span>Trở về</span>
                </button>
            </div>

        </div>


        <!-- START BODY-DETAIL -------------------->
        <!-- FORM -------------------->
        <div class="box box-primary box-body">
        <div class="row " style="padding-bottom: 10px; padding-top: 5px">
            <div class="col-sm-12">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div  class="col-md-4  "><label>RoleName </label></div>
                            <div class="col-md-8">
                                <span ng-if="!detail.IsEditingDetail" ng-bind="detail.DataObject.RoleName || '(Chưa có)'" class=""></span>
                                
                                <input ng-if="detail.IsEditingDetail" class="form-control" ng-model="detail.DataObject.RoleName"
                                    placeholder="Nhập RoleName" required
                                    check-empty="" check-empty-message="Vui lòng nhập [RoleName]."
                                    check-length="200" check-length-message="Chiều dài tối đa là {0}."
                                    check-under="RoleName" />
                            </div>
                        </div>
                        
                    </div>

                    <div class="col-md-6">
                        <div class="row">
                            <div  class="col-md-4  "><label>IsSpecial </label></div>
                            <div class="col-md-8">
                                <input type="checkbox" ng-model="detail.DataObject.IsSpecial"  ng-disabled="!detail.IsEditingDetail"/>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        </div>

        <!-- TABLE -------------------->
        <div class="row" ng-class="{'none-display' : !(detail.DataObject.Id > 0)}">
            <!-- MENU-MAPPING -->
            <div class="col-md-6">
                <div class="box  box-body">
                <div class="row" >
                    <div class="col-sm-6" >
                        <h5>Menu</h5>
                    </div>
                    <div class="col-md-6 pull-right text-right" >
                        <button class="btn btn-success  "  ng-disabled="!detail.MenuFormConfig._CanCreate" 
                            type="button" data-toggle="modal" data-target="#RoleMenuModal">
                            <i class="fa fa-plus white"></i> Thêm
                        </button>
                    </div>
                </div>
                <table  class="table table-bordered table-striped table-hover table-condensed editable-table no-margin" 
                    ng-form="detail.MenuTableForm._tableForm" 
                    ng-table="detail.MenuTableForm.tableParams" >
                    <tr ng-repeat="row in $data" >
                        <td title="'#'" class="col-center">
                            <span>{{ ((detail.MenuTableForm.tableParams.page() - 1)  *detail.MenuTableForm.tableParams.count()) + ($index +1) }}</span>
                        </td>

                        <!--------- data columns -------------->
                        <td title="'Menu'"  sortable="'MenuId.Name'">
                            <span class="editable-text"><a href="#" ng-bind="row.MenuId_Name" ng-click="detail.EditMenu(row)"></a></span>
                        </td>

                        <!---------command buttons -------------->  
                        <td width="100px" >
                            <!---edit--->
                            <button class="btn btn-default btn-sm" ng-click="detail.EditMenu(row)" 
                                ng-if="detail.MenuFormConfig._CanUpdate"><span class="glyphicon glyphicon-pencil"></span></button>
                           
                            <!----del--->
                            <button class="btn btn-danger btn-sm" ng-click="detail.DeleteMenu(row)" 
                                ng-if="detail.MenuFormConfig._CanDelete"><span class="glyphicon glyphicon-trash"></span></button>
                        </td>
                    </tr>
                    <!--------------- table footer------------------>
                    <tfoot>
                        <tr>
                            <td colspan="3"><label>Số records : {{detail.MenuTableForm.tableParams.total()}} </label></td>
                        </tr>
                    </tfoot>
                </table>
                <div style="clear:both"></div>
                </div>
            </div>

            <!-- OBJECT-MAPPING -->
            <div class="col-md-6">
                <div class="box  box-body">
                <div class="row" >
                    <div class="col-sm-6" >
                        <h5>Object</h5>
                    </div>
                    <div class="col-md-6 pull-right text-right" >
                        <button class="btn btn-success  "  ng-disabled="!detail.DBObjectFormConfig._CanCreate" 
                            type="button"  data-toggle="modal" data-target="#RoleObjectModal">
                            <i class="fa fa-plus white"></i> Thêm
                        </button>
                    </div>
                </div>
                <table  class="table table-bordered table-striped table-hover table-condensed editable-table no-margin" 
                    ng-form="detail.DBObjectTableForm._tableForm" 
                    ng-table="detail.DBObjectTableForm.tableParams" >
                    <tr ng-repeat="row in $data" >
                        <td title="'#'" class="col-center">
                            <span>{{ ((detail.DBObjectTableForm.tableParams.page() - 1)  *detail.DBObjectTableForm.tableParams.count()) + ($index +1) }}</span>
                        </td>

                        <!--------- data columns -------------->
                        <td title="'TableName'"  sortable="'TableName'"> 
                            <span class="editable-text"><a href="#" ng-bind="row.TableName" ng-click="detail.EditDBObject(row)"></a></span>
                        </td>
                        <td title="'Select?'"  sortable="'CanSelect'">
                            <input type="checkbox" name="CanSelect" ng-model="row.CanSelect"  ng-disabled="true"/>
                        </td>
                        <td title="'Update?'"  sortable="'CanUpdate'">
                            <input type="checkbox" name="CanUpdate" ng-model="row.CanUpdate"  ng-disabled="true"/>
                        </td>
                        <td title="'Delete?'"  sortable="'CanDelete'">
                            <input type="checkbox" name="CanDelete" ng-model="row.CanDelete"  ng-disabled="true"/>
                        </td>

                        <!---------command buttons -------------->  
                        <td width="100px" >
                            <!---edit--->
                            <button class="btn btn-default btn-sm" ng-click="detail.EditDBObject(row)" 
                                ng-if="detail.DBObjectFormConfig._CanUpdate"><span class="glyphicon glyphicon-pencil"></span></button>
                           
                            <!----del--->
                            <button class="btn btn-danger btn-sm" ng-click="detail.DeleteMenu(row)" 
                                ng-if="detail.DBObjectFormConfig._CanDelete"><span class="glyphicon glyphicon-trash"></span></button>
                        </td>
                    </tr>
                    <!--------------- table footer------------------>
                    <tfoot>
                        <tr>
                            <td colspan="6"><label>Số records : {{detail.DBObjectTableForm.tableParams.total()}} </label></td>
                        </tr>
                    </tfoot>
                </table>
                <div style="clear:both"></div>
                </div>
            </div>
        </div>
        <!-- END   BODY-DETAIL -------------------->


        <!-- START : MODEL --------------------------------------------->
        <!-- RoleMenuModal -->
        <div ng-controller="RoleMenuController as modal">
        <div id="RoleMenuModal" class="modal fade " role="dialog">
            <div class="modal-dialog modal-md">
                <!-- Modal content-->
                <div class="modal-content" ng-if="modal.IsShow">
                    <div class="modal-header bg-light-blue white border-6">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title bold">Quản lý Menu </h4>
                    </div>
                    <div class="modal-body">
                        <div style="padding: 1px 15px; ">
                        <div class="row">
                            <div  class="col-md-4  "><label>Menu </label></div>
                            <div class="col-md-8">
                                 <input my-autocomplete  ng-model="modal.DataObject.MenuId_Name"
                                    autocomplete-id="auto-menu-id"
                                    autocomplete-table="T_System_Menu"
                                    autocomplete-condition=""

                                    autocomplete-column-value="Id" autocomplete-column-name="Name"
                                    autocomplete-column-filters="Id,Name"
                
                                    autocomplete-model-id="#auto-menu-id-value"
                                    class="form-control "
                                    placeholder="Tìm kiếm" />
                                <input type="text" id="auto-menu-id-value" ng-model="modal.DataObject.MenuId" class="none-display"/>
                            </div>
                        </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            <i class="fa-undo fa"></i>
                            Đóng
                        </button>
                        <button type="button" class="btn btn-primary" ng-click="modal.Save()">
                            <i class="fa-save fa"></i>
                            Lưu
                        </button>
                    </div>
                </div>
            </div>
        </div>
        </div>

        <!-- RoleObjectModal -->
        <div ng-controller="RoleObjectController as modal">
        <div id="RoleObjectModal" class="modal fade " role="dialog">
            <div class="modal-dialog modal-md">
                <!-- Modal content-->
                <div class="modal-content" ng-if="modal.IsShow">
                    <div class="modal-header bg-light-blue white border-6">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title bold">Quản lý Object </h4>
                    </div>
                    <div class="modal-body">
                        <div style="padding: 1px 15px; ">
                        <div class="row">
                            <div  class="col-md-4  "><label>TableName </label></div>
                            <div class="col-md-8">
                                 <input my-autocomplete  ng-model="modal.DataObject.TableName"
                                    autocomplete-id="auto-tablename-id"
                                    autocomplete-table="T_Tool_DBTable"
                                    autocomplete-condition=""

                                    autocomplete-column-value="Id" autocomplete-column-name="TableName"
                                    autocomplete-column-filters="Id,TableName"
                
                                    autocomplete-model-id="#auto-tablename-value"
                                    class="form-control "
                                    placeholder="Tìm kiếm" />
                                <input type="text" id="auto-tablename-value" ng-model="modal.DataObject.DBTableId" class="none-display"/>
                            </div>
                        </div>

                        <div class="row">
                            <div  class="col-md-4  "><label>Select? </label></div>
                            <div class="col-md-8">
                                 <input type="checkbox" ng-model="modal.DataObject.CanSelect" />
                            </div>
                        </div>
                        <div class="row">
                            <div  class="col-md-4  "><label>Update? </label></div>
                            <div class="col-md-8">
                                 <input type="checkbox" ng-model="modal.DataObject.CanUpdate" />
                            </div>
                        </div>
                        <div class="row">
                            <div  class="col-md-4  "><label>Delete? </label></div>
                            <div class="col-md-8">
                                 <input type="checkbox" ng-model="modal.DataObject.CanDelete" />
                            </div>
                        </div>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            <i class="fa-undo fa"></i>
                            Đóng
                        </button>
                        <button type="button" class="btn btn-primary" ng-click="modal.Save()">
                            <i class="fa-save fa"></i>
                            Lưu
                        </button>
                    </div>
                </div>
            </div>
        </div>
        </div>
        <!-- END   : MODEL --------------------------------------------->
        <div ng-init="detail.initModals()"></div>
    </div>
</div>
<!-- END   : DETAIL --------------------------------------------->

</div>

<script type="text/javascript">
    CHUNOApp.controller('MasterController', ['$scope', 'NgTableParams', '$controller', '$q', '$timeout',
     function ($scope, NgTableParams, $controller, $q, $timeout) {
         $controller('CommonController', { $scope: $scope });
         $scope.masterController = this;

         var self = this;
         self.ObjectTitle = "Quản lý quyền";
         //========================================================
         //Controller Properties
         self.IsShowDetail = false;
         self.isLoadingImage = false;
         $scope.DetailAPI = {};

         //======================================
         //form config
         var config = new DataFormConfig();
         {
             config.dataobject = 'T_System_Role';
             config.columns = ['Id', 'RoleName', 'IsSpecial'].join(';'); //ko dc
             config.sort = 'T_System_Role.Id DESC';
             config.condition = '(T_System_Role.IsActive=1 or T_System_Role.IsActive is NULL)';
             config.action = 'get'; //getall/get
             config.startrow = 0;
             config.endrow = 10;
         }

         self.FormConfig = config;
         self.FormConfig._CanCreate = true;
         self.FormConfig._CanUpdate = true;
         self.FormConfig._CanDelete = true;

         //form object
         self.NewObject = function () {
             return {
                 Id: 0,
                 RoleName: '',
                 IsSpecial :'',

                 Version: 0,
                 IsActive: true
             };
         }
         self.DataObject = self.NewObject();


         self.FormObject = new DataObject("T_System_Role", $scope);
         self.FormObject.SetObject(self.DataObject);

         //======================================
         //tableform
         self.TableForm = new DynamicTableForm(NgTableParams, $q, self ,function (params) {
             var config = {};
             $.extend(config, self.FormConfig);
             //===========================    
             var filter = params.filter();
             var sorting = params.sorting();
             var pagesize = params.count();
             var page = params.page();
             //===========================    
             //condition
             var conditionarr = [];
             for (var key in filter) {
                 var column = 'T_System_Role.' + key;
                 if (key.indexOf('.') >= 0)
                     column = key;
                 var cond = CommonHelper.CreateCondition(column, filter[key]);
                 conditionarr.push(cond);
             }
             if (conditionarr.length > 0) config.condition += (config.condition == '' ? '' : ' AND ') + conditionarr.join(" AND ");

             //sort
             var sortnarr = [];
             for (var key in sorting) {
                 var column = 'T_System_Role.' + key;
                 if (key.indexOf('.') >= 0)
                     column = key;
                 sortnarr.push(column + " " + sorting[key] + "");
             }

             if (config.sort != '') sortnarr.push(config.sort);
             config.sort = sortnarr.join(",");
             //===========================
             return config;
         });

         //======================================
         self.ClearForm = function () {
             self.DataObject = self.NewObject();
         }

         self.AddItem = function () {
             //create newobject
             var newobject = self.NewObject();

             //check permission
             newobject._CanUpdate = self.FormConfig._CanUpdate;//item._CanUpdate;
             newobject._CanDelete = self.FormConfig._CanDelete;

             //set object to detail view
             $scope.DetailAPI.SetObject(newobject);
             self.IsShowDetail = true;
         };

         self.Edit = function (object, rowForm) {
             //load object
             var object = self.FormObject.GetObject(object.Id); //GetObject(value, colname)

             //copy object
             var copyobject = self.NewObject();
             //copyobject có thuộc tính nào thì object mới đưa vào
             self.FormObject.CopyFields(object, copyobject);

             //check permission
             copyobject._CanUpdate = self.FormConfig._CanUpdate;//item._CanUpdate;
             copyobject._CanDelete = self.FormConfig._CanDelete;

             //set object to detail view
             $scope.DetailAPI.SetObject(copyobject);
             self.IsShowDetail = true;
         }

         self.DeleteObject = function (object) {
             ShowConfirmModal("Bạn có muốn xóa user " + object.Id + " - " + object.Name + "?",
                 function () {
                     if (self.FormObject.DeleteObject(object.Id)) {

                         self.ReloadTable(self.TableForm);
                         ShowSuccessMessage("User được xóa thành công!");

                     }
                 });
         }

         //======================================
         self.ReloadTable = function (tableForm) {
             tableForm.reload();
         }

         self.CloseDetail = function () {
             if ($scope.DetailAPI.IsEditing() && !$scope.DetailAPI.IsNew()) {
                 $scope.DetailAPI.SetEditing(false) ; //tử trạng thái đang chỉnh sửa -> only view
             }
             else {
                $scope.DetailAPI.SetEditing(false);
                self.IsShowDetail = false; //
             }
         }
         //======================================
         self.Search = function () {
             if (self.DataObject == undefined) return;
             //===================================
             var object = self.DataObject;

             var filterobj = {};
             if (!CommonHelper.IsNullOrEmpty(object.RoleName)) {
                 $.extend(filterobj, { RoleName: object.RoleName });
             }

             if (!CommonHelper.IsNullOrEmpty(object.IsSpecial)) {
                 $.extend(filterobj, { IsSpecial: object.IsSpecial });
             }

             self.TableForm.search(filterobj);
         };

         self.showloading = function () { self.isSearching = true; }
         self.hideloading = function () { self.isSearching = false; }

         //=======================================
         //init - data

     }
    ]);

    
</script>

<script type="text/javascript">
    CHUNOApp.controller('DetailController', ['$scope', 'NgTableParams', '$controller', '$q', '$timeout',
     function ($scope, NgTableParams, $controller, $q, $timeout) {
         $controller('CommonController', { $scope: $scope });
         $scope.detailController = this;

         var self = this;
         //========================================================
         //Controller Properties
         self.IsEditingDetail = false;

         self.FormObject = new DataObject("T_System_Role", $scope);
         self.MenuFormObject = new DataObject("T_System_Role_Menu_Mapping", $scope);
         self.DBObjectFormObject = new DataObject("T_System_Role_Object_Mapping", $scope);
         //========================================================
         //menutableform
         $scope.MenuModalAPI = {};
         self.EditMenu = function (object) {
             $timeout(function () {
                 
                 $scope.MenuModalAPI.SetObject(object);
                 $("#RoleMenuModal").modal('show');
                 
             }, 100);
         }
         self.SaveMenu = function (object) {
             self.MenuFormObject.SetObject(object);
             var Id = self.MenuFormObject.SaveObject();
             if (Id > 0) {
                 object.Id = Id;
             }
         }

         self.DeleteMenu = function (object) {
             ShowConfirmModal("Bạn có muốn xóa menu " + object.Id + " - " + object.MenuId_Name + "?",
                function () {
                    if (self.MenuFormObject.DeleteObject(object.Id)) {

                        self.ReloadTable(self.MenuTableForm);
                        ShowSuccessMessage("Đã xóa thành công!");

                    }
                });
         }

         self.ReloadMenuTable = function () {
             self.ReloadTable(self.MenuTableForm);
         }

        
         //========================================================
         //DBObjecttableform
         $scope.DBObjectModalAPI = {};
         self.EditDBObject = function (object) {
             $timeout(function () {
                 $scope.DBObjectModalAPI.SetObject(object);
                 $("#RoleObjectModal").modal('show');

             }, 100);
         }

         self.SaveDBObject = function (object) {
             self.DBObjectFormObject.SetObject(object);
             var Id = self.DBObjectFormObject.SaveObject();
             if (Id > 0) {
                 object.Id = Id;
             }
         }

         self.DeleteDBObject = function (object) {
             ShowConfirmModal("Bạn có muốn xóa object " + object.Id + " - " + object.TableName + "?",
                function () {
                    if (self.DBObjectFormObject.DeleteObject(object.Id)) {

                        self.ReloadTable(self.DBObjectTableForm);
                        ShowSuccessMessage("Đã xóa thành công!");

                    }
                });
         }

         self.ReloadDBObjectTable = function () {
             self.ReloadTable(self.DBObjectTableForm);
         }
         //========================================================
         //Controller Methods
         self.initModals = function () {
             init_modals();
         }

         self.EditDetail = function () {
             self.IsEditingDetail = true;
         }
         
         self.SaveForm = function () {
             var isAdd = self.DataObject.Id <= 0 ? true : false;
             self.SaveObject(self.DataObject);
         }

         self.SaveObject = function (object) {
             //change something wrong

             //==================================
             self.FormObject.SetObject(object);
             var Id = self.FormObject.SaveObject();
             if (Id > 0) {
                 self.DataObject.Id = Id;
                 $("button[data-dismiss='modal']:visible").click();

                 ShowSuccessMessage("Đã lưu thành công!");
             }
             return Id;
         }

         self.ReloadTable = function (tableForm) {
             tableForm.reload();
         }
         //========================================================
         //DetailAPI
         $scope.DetailAPI.SetObject = function (object) {
             self.DataObject = object;

             if (!(self.DataObject.Id > 0))
                 self.IsEditingDetail = true; //add
             //======================
             //init - data
             var config = new DataFormConfig();
             {
                 config.dataobject = 'T_System_Role_Menu_Mapping';
                 config.columns = ['Id', 'RoleId','MenuId','MenuId.Name , MenuId_Name'].join(';'); //ko dc
                 config.sort = 'T_System_Role_Menu_Mapping.Id DESC';
                 config.condition = 'T_System_Role_Menu_Mapping.RoleId = ' + self.DataObject.Id + ' AND (T_System_Role_Menu_Mapping.IsActive=1 )';
                 config.action = 'get'; //getall/get
                 config.startrow = 0;
                 config.endrow = 10;
             }

             self.MenuFormConfig = config;
             self.MenuFormConfig._CanCreate = true;
             self.MenuFormConfig._CanUpdate = true;
             self.MenuFormConfig._CanDelete = true;
             self.MenuTableForm = new DynamicTableForm(NgTableParams, $q, self ,function (params) {
                 var config = {};
                 $.extend(config, self.MenuFormConfig);
                 //===========================   
                 var filter = params.filter();
                 var sorting = params.sorting();
                 var pagesize = params.count();
                 var page = params.page();
                 //===========================       
                 //condition
                 var conditionarr = [];
                 for (var key in filter) {
                     var column = 'T_System_Role_Menu_Mapping.' + key;
                     if (key.indexOf('.') >= 0)
                         column = key;
                     var cond = CommonHelper.CreateCondition(column, filter[key]);
                     conditionarr.push(cond);
                 }
                 
                 if (conditionarr.length > 0) config.condition += (config.condition == '' ? '' : ' AND ') + conditionarr.join(" AND ");

                 //sort
                 var sortnarr = [];
                 for (var key in sorting) {
                     var column = 'T_System_Role_Menu_Mapping.' + key;
                     if (key.indexOf('.') >= 0)
                         column = key;
                     sortnarr.push(column + " " + sorting[key] + "");
                 }
                 if (config.sort != '') sortnarr.push(config.sort);
                 config.sort = sortnarr.join(",");
                 //===========================
                 return config;
             });

             //-------------
             config = new DataFormConfig();
             {
                 config.dataobject = 'T_System_Role_Object_Mapping';
                 config.columns = ['Id', 'RoleId', 'TableName','CanSelect','CanUpdate','CanDelete'].join(';'); //ko dc
                 config.sort = 'T_System_Role_Object_Mapping.Id DESC';
                 config.condition = 'T_System_Role_Object_Mapping.RoleId = ' + self.DataObject.Id + ' AND (T_System_Role_Object_Mapping.IsActive=1 )';
                 config.action = 'get'; //getall/get
                 config.startrow = 0;
                 config.endrow = 10;
             }

             self.DBObjectFormConfig = config;
             self.DBObjectFormConfig._CanCreate = true;
             self.DBObjectFormConfig._CanUpdate = true;
             self.DBObjectFormConfig._CanDelete = true;
             self.DBObjectTableForm = new DynamicTableForm(NgTableParams, $q, self, function (params) {
                 var config = {};
                 $.extend(config, self.DBObjectFormConfig);
                 //===========================   
                 var filter = params.filter();
                 var sorting = params.sorting();
                 var pagesize = params.count();
                 var page = params.page();
                 //===========================       
                 //condition      
                 var conditionarr = [];
                 for (var key in filter) {
                     var column = 'T_System_Role_Object_Mapping.' + key;
                     if (key.indexOf('.') >= 0)
                         column = key;
                     var cond = CommonHelper.CreateCondition(column, filter[key]);
                     conditionarr.push(cond);
                 }
                 if (conditionarr.length > 0) config.condition += (config.condition == '' ? '' : ' AND ') + conditionarr.join(" AND ");

                 //sort
                 var sortnarr = [];
                 for (var key in sorting) {
                     var column = 'T_System_Role_Object_Mapping.' + key;
                     if (key.indexOf('.') >= 0)
                         column = key;
                     sortnarr.push(column + " " + sorting[key] + "");
                 }
                 if (config.sort != '') sortnarr.push(config.sort);
                 config.sort = sortnarr.join(",");
                 //===========================

                 return config;
             });

         };
         $scope.DetailAPI.IsEditing = function () {
             return self.IsEditingDetail;
         };

         $scope.DetailAPI.IsNew = function () {
             return !(self.DataObject.Id>0);
         };
         $scope.DetailAPI.SetEditing = function (isediting) {
             self.IsEditingDetail = isediting;
         };
         //========================================================
     }
    ]);


</script>

<script type="text/javascript">
    function init_modals() {
        $('#RoleMenuModal').on('show.bs.modal', function (e) {
            var modalId = $(this).attr("id");
            var scope = angular.element(document.getElementById(modalId)).scope();
            scope.$apply(function () {
                scope.modal.SetShownModal(true);
            });
        }).on('hide.bs.modal', function (e) {
            var modalId = $(this).attr("id");
            var scope = angular.element(document.getElementById(modalId)).scope();
            scope.$apply(function () {
                scope.modal.SetShownModal(false);
            });
        });

        $('#RoleObjectModal').on('show.bs.modal', function (e) {
            var modalId = $(this).attr("id");
            var scope = angular.element(document.getElementById(modalId)).scope();
            scope.$apply(function () {
                scope.modal.SetShownModal(true);
            });
        }).on('hide.bs.modal', function (e) {
            var modalId = $(this).attr("id");
            var scope = angular.element(document.getElementById(modalId)).scope();
            scope.$apply(function () {
                scope.modal.SetShownModal(false);
            });
        });
    }

    CHUNOApp.controller('RoleMenuController', ['$scope', 'NgTableParams', '$controller', '$q', '$timeout',
     function ($scope, NgTableParams, $controller, $q, $timeout) {
        $controller('CommonController', { $scope: $scope });
        $scope.roleMenuController = this;
        var self = this;

        self.IsShow = false;
        self.SetShownModal = function (isShow) {
            self.IsShow = isShow;
            if (!isShow) self.DataObject = self.NewObject();
        }

        self.NewObject = function () {
            return {
                Id: 0,
                RoleId: $scope.detail.DataObject.Id,
                MenuId: 0,

                MenuId_Name: "",

                Version: 0,
                IsActive: true
            };
        }

        self.DataObject = self.NewObject();

        self.Save = function () {
            setTimeout(function () {
                $scope.detail.SaveMenu(self.DataObject);
                if (self.DataObject.Id > 0) {

                    $("button[data-dismiss='modal']:visible").click();
                    $('#RoleMenuModal').modal('hide');


                    ShowSuccessMessage("Đã lưu thành công!");
                    self.DataObject = self.NewObject();

                    $scope.detail.ReloadMenuTable();
                }
            }, 100);         
        }

        //===========================
        $scope.MenuModalAPI.SetObject = function (object) {
            var copyobject = self.NewObject();
            CommonHelper.CopyFields(object, copyobject);
            self.DataObject = copyobject;
        }
    }
    ]);


    CHUNOApp.controller('RoleObjectController', ['$scope', 'NgTableParams', '$controller', '$q', '$timeout',
    function ($scope, NgTableParams, $controller, $q, $timeout) {
        $controller('CommonController', { $scope: $scope });
        $scope.roleMenuController = this;
        var self = this;

        self.IsShow = false;
        self.SetShownModal = function (isShow) {
            self.IsShow = isShow;
            if (!isShow) self.DataObject = self.NewObject();
        }

        self.NewObject = function () {
            return {
                Id: 0,
                RoleId: $scope.detail.DataObject.Id,
                TableName: "",  DBTableId: 0,
                CanSelect: true,
                CanUpdate: true,
                CanDelete: true,

                Version: 0,
                IsActive: true
            };
        }

        self.DataObject = self.NewObject();

        self.Save = function () {
            setTimeout(function () {
                $scope.detail.SaveDBObject(self.DataObject);
                if (self.DataObject.Id > 0) {

                    $("button[data-dismiss='modal']:visible").click();
                    $('#RoleObjectModal').modal('hide');


                    ShowSuccessMessage("Đã lưu thành công!");
                    self.DataObject = self.NewObject();

                    $scope.detail.ReloadDBObjectTable();
                }
            }, 100);
        }

        //===========================
        $scope.DBObjectModalAPI.SetObject = function (object) {
            var copyobject = self.NewObject();
            CommonHelper.CopyFields(object, copyobject);
            self.DataObject = copyobject;
        }
    }
    ]);
</script>