
@{
    ViewBag.Title = "T_System_Role_User_Mapping";
    Layout = "~/Views/CMS/Shared/_Layout.cshtml";
}
<div  ng-controller="controller_T_System_Role_User_Mapping as master">
<!-- START : MAIN  --------------------------------------------->
<div class="container-fluid none-display" ng-class="{'active-content' : true}">
    <div >
        <!-- TOP BUTTONS -------------------->
        <div class="row" style="padding-top: 5px">
            <div class="col-sm-12" >
                <h4>{{master.ObjectTitle}}</h4>
            </div>
        </div>

        <!-- FORM -------------------->
        <div class="box box-primary box-body">
        <div class="row " style="padding-bottom: 10px; padding-top: 5px">
            <div class="col-sm-12">
            <form name="dataForm" novalidate ng-submit="master.Search()">
                <div class="row">
                    <div class="col-md-6">

<div class="row form-group">
    <label class="col-md-4  ">AccountId </label>
    <div class="col-md-8">
        <select class="form-control " ng-model="master.DataObject.AccountId" required
            my-dropdown
            dropdown-id="dd_AccountId"
            dropdown-table="T_Master_Account"
            dropdown-condition="IsActive=1"
            dropdown-column-value="Id"
            dropdown-column-name="UserName"
            dropdown-empty-value=""
            dropdown-empty-text="-- Chọn --"
            check-empty="" check-empty-message="Vui lòng chọn [AccountId].">
        </select>
    </div>
</div>

<div class="row form-group">
    <label class="col-md-4  ">RoleId </label>
    <div class="col-md-8">
        <select class="form-control " ng-model="master.DataObject.RoleId" required
            my-dropdown
            dropdown-id="dd_RoleId"
            dropdown-table="T_System_Role"
            dropdown-condition="IsActive=1"
            dropdown-column-value="Id"
            dropdown-column-name="RoleName"
            dropdown-empty-value=""
            dropdown-empty-text="-- Chọn --"
            check-empty="" check-empty-message="Vui lòng chọn [RoleId].">
        </select>
    </div>
</div>
                    </div>

                    <div class="col-md-6">
                    </div>
                </div>

                <!-- buttons -->
                <div class="row" style="margin-top:10px">
                     <div class="col-md-6" >
                        <!--- Thêm --->
                        <button type="button" class="btn btn-success" ng-show="!master.isEditing"  ng-disabled="!master.FormConfig._CanCreate || dataForm.$invalid" ng-click="master.SaveForm()">
                            <i class="fa fa-plus white" ng-hide="master.isSaving"></i>
                            <i class="fa fa-spinner white loading" ng-show="master.isSaving"></i> 
                            Thêm
                        </button>

                        <!--- Cập nhật --->
                        <button type="button" class="btn btn-warning" ng-show="master.isEditing"  ng-disabled="!master.FormConfig._CanUpdate || dataForm.$invalid" ng-click="master.SaveForm()" >
                            <i class="fa fa-edit white" ng-hide="master.isSaving"></i> 
                            <i class="fa fa-spinner white loading" ng-show="master.isSaving"></i>
                            Cập nhật
                        </button>

                        <!--- Clear --->
                        <button class="btn btn-primary" ng-click="master.ClearForm()" type="button">
                            <i class="fa fa-undo white"></i> Clear
                        </button>

                        <!--- Search --->
                        <button type="submit" id="btn-search" class="btn  btn-primary search"  >
                            <i class="fa fa-search" ng-hide="master.isSearching"></i>
                            <i class="fa fa-spinner white loading" ng-show="master.isSearching"></i>
                            Tìm kiếm
                        </button>
                    </div>
                </div>
            </form>
        
            </div>
        </div>
        </div>
        <!-- TABLE -------------------->
        <div class="row">
            <div class="col-md-12">
                <table  class="table table-bordered table-striped table-hover table-condensed editable-table no-margin" 
                    ng-form="master.TableForm._tableForm" 
                    ng-table="master.TableForm.tableParams"
                    demo-tracked-table="master.TableForm._tableTracker"
                    disable-filter="master.TableForm.isAdding" >
                    <tr ng-repeat="row in $data" ng-form="rowForm" demo-tracked-table-row="row">
                        <td title="'#'" class="col-center">
                            <span>{{ ((master.TableForm.tableParams.page() - 1)  *master.TableForm.tableParams.count()) + ($index +1) }}</span>
                        </td>

                        <!--------- data columns -------------->
<td title="'AccountId'"  sortable="'AccountId.UserName'">
    <span  class="editable-text"ng-bind="row.AccountId_UserName" />
</td>
<td title="'RoleId'"  sortable="'RoleId.RoleName'">
    <span  class="editable-text"ng-bind="row.RoleId_RoleName" />
</td>
                        <!---------command buttons -------------->  
                        <td width="100px" >
                            <!---edit--->
                            <button class="btn btn-default btn-sm" ng-click="master.EditObject(row)" 
                                ng-if="!row.isEditing && master.FormConfig._CanUpdate"><span class="glyphicon glyphicon-pencil"></span></button>

                            <!----del--->
                            <button class="btn btn-danger btn-sm" ng-click="master.DeleteObject(row)" 
                                ng-if="!row.isEditing && master.FormConfig._CanDelete"><span class="glyphicon glyphicon-trash"></span></button>
                        </td>
                    </tr>
                    <!--------------- table footer------------------>
                    <tfoot>
                        <tr>
                            <td colspan="7"><label>Số records : {{master.TableForm.tableParams.total()}} </label></td>
                        </tr>
                    </tfoot>
                </table>
                <div style="clear:both"></div>
            </div>
        </div>

    </div>
</div>
<!-- END   : MAIN  --------------------------------------------->

<!-- START : MODAL --------------------------------------------->
<!-- END   : MODAL --------------------------------------------->
<div ng-init="master.initModals()"></div>

</div>

<script type="text/javascript">
CHUNOApp.controller('controller_T_System_Role_User_Mapping', ['$scope', 'NgTableParams', '$controller', '$q', '$timeout',
function ($scope, NgTableParams, $controller, $q, $timeout) {
    $controller('CommonController', { $scope: $scope });
    $scope.masterController = this;

    var self = this;
    self.ObjectTitle = "Quản lý - " + "T_System_Role_User_Mapping";
    //========================================================
    //Controller Properties
    self.isEditing = false;
    self.isSaving = false;
    self.isLoadingImage = false;
    //======================================
    //form config
    var config = new DataFormConfig();
    {
        config.table = 'T_System_Role_User_Mapping';
        config.columns = ['Id',
'AccountId' ,
'AccountId.UserName , AccountId_UserName' ,
'RoleId' ,
'RoleId.RoleName , RoleId_RoleName' ,
            ].join(';'); //ko dc
        config.sort = 'T_System_Role_User_Mapping.Id DESC';
        config.condition = '(T_System_Role_User_Mapping.IsActive = 1 )';
        config.getdata = 'apart'; //all/apart
        config.startrow = 0;
        config.endrow = 10;
    }

    self.FormConfig = config;
    self.FormConfig._CanCreate = true;
    self.FormConfig._CanUpdate = true;
    self.FormConfig._CanDelete = true;

    //form object
    self.NewObject = function () {
        return {
            Id: 0,   
AccountId : '' , AccountId_UserName : '' ,
RoleId : '' , RoleId_RoleName : '' ,
            Version: 0,
            IsActive: true
        };
    }
    self.DataObject = self.NewObject();

    self.FormObject = new DataObject('T_System_Role_User_Mapping', $scope);
    self.FormObject.SetObject(self.DataObject);
    //======================================
    self.ClearForm = function () {       

        self.DataObject = self.NewObject();
        self.isEditing = false;
    }

    self.EditObject = function (object, rowForm) {
        self.isEditing = true;
        self.DataObject = self.NewObject(); //đảm bảo thông tin ko bị undefined
        CommonHelper.CopyNeedFields(object, self.DataObject); //from -> to
    }

    self.SaveForm = function () {
        self.isSaving = true;
        setTimeout(function () {
            //change something wrong
            
            if (self.DataObject.AccountId == '' || self.DataObject.AccountId == 0)
                self.DataObject.AccountId = '';
            
            
            if (self.DataObject.RoleId == '' || self.DataObject.RoleId == 0)
                self.DataObject.RoleId = '';
            
            //=====================
            //save img
            
            //---------------------
            var isAdd = self.DataObject.Id <= 0 ? true : false;
            self.SaveObject(self.DataObject);
            if (isAdd) {
                self.ClearForm();
            }
            self.ReloadTable(self.TableForm);

            self.isSaving = false;
            $scope.$apply();
        }, 100);
    }

    self.SaveObject = function (object) {
        self.FormObject.SetObject(object);
        var Id = self.FormObject.SaveObject();
        if (Id > 0) {
            self.DataObject.Id = Id;
            $("button[data-dismiss='modal']:visible").click();
            ShowSuccessMessage("Đã tạo thành công!");
        }
        return Id;
    }

    self.DeleteObject = function (object) {
        ShowConfirmModal("Bạn có muốn xóa [T_System_Role_User_Mapping] " + object.Id + " - " + object.Name + "?",
            function () {
                if (self.FormObject.DeleteObject(object.Id)) {

                    self.ReloadTable(self.TableForm);
                    ShowSuccessMessage("Đã xóa thành công!");
                }
            });
    }

    //======================================
    //tableform
    self.TableForm = new DynamicTableForm(NgTableParams, $q, self, function (params) {
        var config = {};
        $.extend(config, self.FormConfig);
        //===========================    
        var filter = params.filter();
        var sorting = params.sorting();
        var pagesize = params.count();
        var page = params.page();
        //===========================    
        //condition
        var conditionarr = [];
        for (var key in filter) {
            var column = 'T_System_Role_User_Mapping' +'.' + key;
            if (key.indexOf('.') >= 0)
                column = key;
            var cond = CommonHelper.CreateCondition(column, filter[key]);
            conditionarr.push(cond);
        }
        if (conditionarr.length > 0) config.condition += (config.condition == '' ? '' : ' AND ') + conditionarr.join(" AND ");

        //sort
        var sortnarr = [];
        for (var key in sorting) {
            var column = 'T_System_Role_User_Mapping' +'.' + key;
            if (key.indexOf('.') >= 0)
                column = key;
            sortnarr.push(column + " " + sorting[key] + "");
        }

        if (config.sort != '') sortnarr.push(config.sort);
        config.sort = sortnarr.join(",");
        //===========================
        return config;
    });

    self.ReloadTable = function (tableForm) {
        tableForm.reload();
    }
    //======================================
    self.Search = function () {
        if (self.DataObject == undefined) return;
        //===================================
        var object = self.DataObject;
        var filterobj = {};


if (CommonHelper.IsSearchableValue(object.AccountId)) {
    $.extend(filterobj, { AccountId: object.AccountId });
}


if (CommonHelper.IsSearchableValue(object.RoleId)) {
    $.extend(filterobj, { RoleId: object.RoleId });
}

        self.TableForm.search(filterobj);
    };

    self.showloading = function () { self.isSearching = true; }
    self.hideloading = function () { self.isSearching = false; }

    //========================================================
    self.initModals = function () {
        if (typeof init_modals !== 'undefined') init_modals();
    } 

    //=======================================
    //init - data
}
]);

</script>
